/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Tutorial as PrismaTutorial } from "@prisma/client";

export class TutorialServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TutorialCountArgs, "select">): Promise<number> {
    return this.prisma.tutorial.count(args);
  }

  async tutorials(
    args: Prisma.TutorialFindManyArgs
  ): Promise<PrismaTutorial[]> {
    return this.prisma.tutorial.findMany(args);
  }
  async tutorial(
    args: Prisma.TutorialFindUniqueArgs
  ): Promise<PrismaTutorial | null> {
    return this.prisma.tutorial.findUnique(args);
  }
  async createTutorial(
    args: Prisma.TutorialCreateArgs
  ): Promise<PrismaTutorial> {
    return this.prisma.tutorial.create(args);
  }
  async updateTutorial(
    args: Prisma.TutorialUpdateArgs
  ): Promise<PrismaTutorial> {
    return this.prisma.tutorial.update(args);
  }
  async deleteTutorial(
    args: Prisma.TutorialDeleteArgs
  ): Promise<PrismaTutorial> {
    return this.prisma.tutorial.delete(args);
  }
}

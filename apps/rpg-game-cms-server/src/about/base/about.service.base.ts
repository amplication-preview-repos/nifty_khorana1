/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, About as PrismaAbout } from "@prisma/client";
import { ContactFormCreateInput } from "../ContactFormCreateInput";

export class AboutServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AboutCountArgs, "select">): Promise<number> {
    return this.prisma.about.count(args);
  }

  async abouts(args: Prisma.AboutFindManyArgs): Promise<PrismaAbout[]> {
    return this.prisma.about.findMany(args);
  }
  async about(args: Prisma.AboutFindUniqueArgs): Promise<PrismaAbout | null> {
    return this.prisma.about.findUnique(args);
  }
  async createAbout(args: Prisma.AboutCreateArgs): Promise<PrismaAbout> {
    return this.prisma.about.create(args);
  }
  async updateAbout(args: Prisma.AboutUpdateArgs): Promise<PrismaAbout> {
    return this.prisma.about.update(args);
  }
  async deleteAbout(args: Prisma.AboutDeleteArgs): Promise<PrismaAbout> {
    return this.prisma.about.delete(args);
  }
  async SubmitContactForm(args: ContactFormCreateInput): Promise<string> {
    throw new Error("Not implemented");
  }
}
